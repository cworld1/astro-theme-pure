---
import { cn } from '@/utils'

const { class: className } = Astro.props
---

<comment-component>
  <div id='waline' class={cn('not-prose', className)}>
    Comment seems to stuck. Try to refresh?âœ¨
  </div>
</comment-component>

<script>
  import { siteConfig } from '@/site-config'
  import { init } from '@waline/client'
  import '@waline/client/style'

  class Comment extends HTMLElement {
    constructor() {
      super()
    }

    connectedCallback() {
      init({
        el: '#waline',
        serverURL: siteConfig.walineServerUrl,
        emoji: [
          'https://cdn.cbd.int/@waline/emojis@1.2.0/bmoji',
          'https://cdn.cbd.int/@waline/emojis@1.2.0/weibo'
        ],
        reaction: ['/icons/heart-item.svg'],
        // search: false,
        pageview: true,
        comment: true,
        locale: {
          reaction0: 'Like',
          placeholder: 'Welcome to comment. (Email to receive replies. Login is unnecessary)'
        },
        imageUploader: false
      })
    }
  }

  customElements.define('comment-component', Comment)
</script>

<style>
  /* Basic theme */
  #waline {
    /* Font size */
    --waline-font-size: 16px;
    /* Basic color */
    --waline-white: hsl(var(--background) / var(--tw-bg-opacity));
    --waline-light-grey: #999;
    --waline-dark-grey: #666;
    /* Theme color */
    --waline-theme-color: hsl(var(--foreground) / var(--tw-text-opacity));
    --waline-active-color: hsl(var(--primary) / var(--tw-text-opacity));
    /* Layout */
    --waline-color: hsl(var(--muted-foreground) / var(--tw-text-opacity));
    --waline-bg-color: hsl(var(--primary-foreground) / var(--tw-bg-opacity));
    --waline-bg-color-light: hsl(var(--input) / var(--tw-bg-opacity));
    --waline-bg-color-hover: #f0f0f0;
    --waline-border-color: hsl(var(--border) / var(--tw-border-opacity));
    --waline-disable-bg-color: #f8f8f8;
    --waline-disable-color: #bbb;
    --waline-code-bg-color: #282c34;
    /* Special */
    --waline-bq-color: #f0f0f0;
    /* Avatar */
    --waline-avatar-size: 3.25rem;
    --waline-m-avatar-size: calc(var(--waline-avatar-size) * 9 / 13);
    /* Badge */
    --waline-badge-color: #3498db;
    --waline-badge-font-size: 0.775em;
    /* Info */
    --waline-info-bg-color: var(--waline-bg-color-light);
    --waline-info-color: var(--waline-color);
    --waline-info-font-size: 0.625em;
    /* Render selection */
    --waline-border: 1px solid var(--waline-border-color);
    --waline-avatar-radius: 50%;
    --waline-box-shadow: none;
  }

  /* Reaction buttons */
  #waline :global(.wl-reaction-title, .wl-reaction-text) {
    display: none;
  }
  #waline :global(.wl-reaction) {
    overflow: visible;
    margin-bottom: 0.5em;
  }
  #waline :global(.wl-reaction-img) {
    width: auto;
    display: flex;
    height: 35px;
    align-items: center;
    column-gap: 0.4rem;
  }
  #waline :global(.wl-reaction-votes) {
    position: inherit;
    top: inherit;
    min-width: inherit;
    inset-inline-end: inherit;
    display: flex;
    font-weight: normal;
    border: none;
    background: none;
    color: inherit;
    padding: 0.2rem 0.4rem;
    border-radius: 6px;
  }
  #waline :global(.wl-reaction-loading) {
    position: inherit;
    top: inherit;
    min-width: inherit;
  }
  #waline :global(.wl-reaction-item.active .wl-reaction-votes) {
    background: var(--waline-theme-color);
    color: var(--waline-bg-color);
  }

  #waline :global(.wl-reaction-votes:after) {
    margin-left: 0.25em;
    content: 'Like(s)';
    display: inline-block;
    clear: both;
    border: 0;
  }
  #waline :global(.wl-reaction img) {
    filter: invert(25%);
  }
  :global(.dark) #waline :global(.wl-reaction img) {
    filter: invert(75%);
  }

  /* @media (max-width: 640px) {
    #waline :global(.wl-card-item) {
      padding: 0 !important;
    }
    #waline :global(.wl-cards .wl-user) {
      margin-inline-end: 0.45em;
    }
  } */
</style>
